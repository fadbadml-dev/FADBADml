(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

let static tstep   = 0.05
let static maxt    = 50.0
let static epsilon = 0.01

open Obs
open Spec

hybrid maneuver () =
    present (period(tstep)) ->
        Gen.t_fby(const2((90., 100.), (0., 10.)),
                  rand_horizon(1., 5.),
        Gen.t_fby(const2((0., 10.), (320., 350.)),
                  rand_horizon(30., 40.),
                  const2((90., 100.), (0., 10.))
        )) (tstep, (0., 0.))
    init (0., 0.)

(*
    If the car switches from any gear to gear 1, then it will stay in gear 1
    for 2.5 seconds

    □((¬g1 ∧ ◇_[0,eps] g1) ⇒ □_[0,2.5] g1 )
      \__________________\  -> going from any gear but 1 to gear 2
  = □(edge g1 ⇒ □_[0,2.5] g1)
*)

node phi4((throttle, brake_torque), (rpm, gear, speed)) =
    let start = q_true fby q_false in
    let switch = q_and(q_not start, q_up (q_eqi (gear, 1.))) in
    alwaysBfromA_timed 2.5 (tstep, switch, q_eqi(gear, 1.))

open Scope

node show(t, (throttle, brake_torque), (rpm, gear, speed), phi) =
    let s1 = scope2(0.  , 350. , ("throttle", linear, throttle),
                                   ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope (0.  , 200. , ("speed", linear, speed))
    and s4 = scope (600., 6000., ("rpm", linear, rpm))
    and s5 = scope2( -2.,    2., ("□(edge g1 ⇒ □<sub>[0,2.5]</sub> g1)", linear, phi),
                                 ("", linear, 0.)) in

    window5("Autotrans spec", 50., t, s1, s2, s3, s4, s5)

hybrid cli  () = cli  maneuver phi4 Autotransc.autotrans maxt tstep ()
hybrid plot () = plot maneuver phi4 Autotransc.autotrans show tstep ()
