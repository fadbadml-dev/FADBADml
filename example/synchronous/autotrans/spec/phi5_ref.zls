(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

let static tstep   = 0.05
let static maxt    = 30.0
let static epsilon = 0.01

open Scope
open Spec

node maneuver tstep = scenario tstep

(*
    When shifting into any gear, there should be no shift from that gear to
    any other gear within 2.5sec.

    ∧^4_i=1 □((¬gi ∧ X gi) ⇒ □_[0,2.5] gi)
*)


let static dur = 2.5

node phi_i(i)(gear) =
    let rec t = 0. -> pre t +. tstep in

    let gi = min (gear -. i -. 0.5) (i +. 0.5 -. gear) in

    let rec automaton
        | Init ->
            do res = (-. gi) -> min (pre res) (-. gi)
            and is_done = false
            until ((false -> (pre gi < 0.)) && (gi >= 0.))
            then Main(t)
        | Main(t0) ->
            do
                res = gi -> min (pre res) gi
                and is_done = false
            until (gi < 0.)                then False(res)
            else  (t > t0 +. dur -. tstep) then Init
        | False(f) ->
            do
                res = (min f gi) -> min (pre res) gi
                and is_done = true
            done
    in res, is_done

node phi5((throttle, brake_torque), (rpm, gear, speed)) =
    let phi1, s1 = phi_i(1.)(gear) in
    let phi2, s2 = phi_i(2.)(gear) in
    let phi3, s3 = phi_i(3.)(gear) in
    let phi4, s4 = phi_i(4.)(gear) in

    min (min (min phi1 phi2) phi3) phi4,
    s1 && s2 && s3 && s4

open Scope

node show(t, (throttle, brake_torque), (rpm, gear, speed), phi) =
    let s1 = scope2(0.  , 350. , ("throttle", linear, throttle),
                                 ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope (0.  , 200. , ("speed", linear, speed))
    and s4 = scope (600., 6000., ("rpm", linear, rpm))
    and s5 = scope2( -4.,    4., ("∧<sup>4</sup><sub>i=1</sub> □((¬gi ∧ X gi) ⇒ □<sub>[0," ^ (string_of_float dur) ^ "]</sub> gi)", linear, phi)
                                 ("", linear, 0.)) in

    window5("Autotrans: phi5", 50., t, s1, s2, s3, s4, s5)

let node cli  () = cli  maneuver phi5 Autotransd.autotrans maxt tstep
let node plot () = plot maneuver phi5 Autotransd.autotrans show tstep
