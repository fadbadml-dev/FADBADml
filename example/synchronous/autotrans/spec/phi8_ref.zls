(* Property taken from
 *
 * Hoxha, B., Abbas, H., and Fainekos, G. E. (2014).
 * Benchmarks for temporal logic requirements for automotive systems.
 * In ARCH@CPSWeek.
 *
 * page 28
*)

(* Recommended values:
   max_rpm  : 4500, 5000, 5200, 5500
   max_speed:  120,  160,  170,  200
   t        :    4,    8,   10,   20
*)

let static tstep     = 0.05
let static maxt      = 30.0
let static max_rpm   = 4500.
let static max_speed = 120.
let static cT        = 10.

open Spec

node maneuver tstep = scenario tstep

(*
    A gear increase from first to fourth in under cT secs, ending in an RPM
    above ω̄ within 2 seconds of that, should result in a vehicle speed
    above v̄.

    (g1 ∧ ◇_[0,10] (g4 ∧ ◇_[0,2] (w >= w̄))) ⇒ □_[0,10] (g4 ∧ (w > w̄) ⇒ (v >= v̄))
*)

node phi8((throttle, brake_torque), (rpm, gear, speed)) =
    let rec t = 0. -> pre t +. tstep in

    let g1 = min (gear -. 0.5) (1.5 -. gear) in
    let g4 = min (gear -. 3.5) (4.5 -. gear) in

    let rec last_g1 = infinity -> (if g1 >= 0. then t else pre last_g1) in
    let rec last_g4 = infinity -> (if g4 >= 0. then t else pre last_g4) in

    let w_phi = rpm -. max_rpm in
    let v_phi = speed -. max_speed in

    automaton
        | Init ->
            do infinity, false
            until (w_phi >= 0. &&
                   last_g4 <= 2. &&
                   last_g1 <= (cT +. 2.) &&
                   last_g1 <= last_g4 &&
                   v_phi < 0.)
            then False(v_phi)
        | False(f) -> do f, true done


open Scope

node show(t, (throttle, brake_torque), (rpm, gear, speed), phi) =
    let s1 = scope2(0.  , 350. , ("throttle", linear, throttle),
                                 ("brake torque", linear, brake_torque))
    and s2 = scope (0.  , 4.   , ("gear", linear, gear))
    and s3 = scope2(0.  , 200. , ("speed", linear, speed),
                                 ("max_speed", linear, max_speed))
    and s4 = scope2(600., 6000., ("rpm", linear, rpm),
                                 ("max_rpm", linear, max_rpm))
    and s5 = scope2(-200., 200., ("(g1 ∧ ◇<sub>[0," ^ (string_of_float cT) ^"]</sub> (g4 ∧ ◇<sub>[0,2]</sub> (rpm ≥ max_rpm))) ⇒ □<sub>[0,10]</sub> (g4 ∧ (rpm &#60; max_rpm) ⇒ (speed ≥ max_speed))", linear, phi),
                                 ("", linear, 0.)) in

    window5("Autotrans: phi8", 50., t, s1, s2, s3, s4, s5)

let node cli  () = cli  maneuver phi8 Autotransd.autotrans maxt tstep
let node plot () = plot maneuver phi8 Autotransd.autotrans show tstep
